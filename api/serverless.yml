service: ponto-demo

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  memorySize: 256
  stage: dev
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueAttributes
      Resource: !GetAtt SourceQueue.Arn

functions:
  dequeue:
    handler: handler.dequeue
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SourceQueue
              - Arn

custom:
  apiGatewayServiceProxies:
    - sqs:
        path: /ponto
        method: post
        queueName: { 'Fn::GetAtt': ['SourceQueue', 'QueueName'] }
        cors: true
        response:
          template:
            success: |-
              { "message": "accepted" }
            clientError: |-
              { "message": "there is an error in your request" }
            serverError: |-
              { "message": "there was an error handling your request" }
  vpc:
    vpcName: 'vpc-mjlbnu'
    subnetNames:
      - 'subnet-mjlbnu'
    securityGroupNames:
      - 'sg-mjlbnu'

resources:
  Resources:
    SourceQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: SourceQueue
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - 'DeadLetterQueue'
              - 'Arn'
          maxReceiveCount: 2
        VisibilityTimeout: 10
    DeadLetterQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: DeadLetterQueue
        VisibilityTimeout: 10
  Outputs:
    SourceQueueURL:
      Description: 'URL of source queue'
      Value:
        Ref: 'SourceQueue'
    SourceQueueARN:
      Description: 'ARN of source queue'
      Value:
        Fn::GetAtt:
          - 'SourceQueue'
          - 'Arn'
    DeadLetterQueueURL:
      Description: 'URL of dead-letter queue'
      Value:
        Ref: 'DeadLetterQueue'
    DeadLetterQueueARN:
      Description: 'ARN of dead-letter queue'
      Value:
        Fn::GetAtt:
          - 'DeadLetterQueue'
          - 'Arn'

plugins:
  - serverless-apigateway-service-proxy
  - serverless-plugin-lambda-dead-letter
  - serverless-vpc-discovery
